class DemoC
{
    DemoC() {}

    unprotected int fib(int k)
	{
		if (k == 0)
			return 0;
		else if (k == 1)
			return 1;
		else
			return (fib(k - 1) + fib(k - 2));
    }
	
	unprotected int inc(int i)
	{
		i = i + 1;
		return i;
	}
}

class Syntax
{
	unprotected int i = 5;
	protected char c;
	unprotected bool b;
	
	Syntax(int j, char d)
	{
		i = j;
		c = d;
	}

	protected void split()
	{
		spawn checkit() set i;
		block;
		lock c;
		release checkit;
	}

	unprotected void checkit()
	{
	  char cc[] = new char[1000];
	  int  ii[] = new int[512];
	  Syntax ss[] = new Syntax[256];
	  
	  cc[1] = cc[2]; // yes
	  //cc[31] = cc;
	  //cc[100] = 5 + i;
	  cc[10] = c;     // yes
	  
	  //ii[] = ii[];
	 // i[4] = 5 + i;
	  ii[5000] = 5 + i; // yes
	  //ii = ss;
	  i = ii[0];  // yes

	 ss[0] = new Syntax(7, 'c');
	 ss[i] = ss[i+1]; // yes
	 ss[i+7/3] = new Syntax(i, c); // yes

	 //return ii;
	 } 
}


void kxi2015 main()
{
    int k;
    int j;
    int sum;

    DemoC dc;

    cout << '>';
    cin >> k;
    cout << '\n';

    while (k != 0)
	{
		if (k < 0)
		{
			k = k * -1;
			sum = 0;
			while (k > 0)
			{		
				j = k;
				while (j >= 1)
				{
					if ((j * 3) > 15)
					sum = 2 * sum + j * 3;
					j = j - 1;
				}
				k = k - 1;
			}
			cout << sum;
			cout << '\n';
		}
		else
		{
			sum = dc.fib(k) + 2 * 3;
			cout << sum;
			cout << '\n';
		}

		cout << '>';
		cin >> k;
		cout << '\n';
		    
    }

    cout << dc.inc(dc.inc(dc.inc(39)));
    cout << '\n';
}